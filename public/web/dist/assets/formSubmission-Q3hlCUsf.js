import{r as u}from"./main-BSXUZJnf.js";function S(e){const n=u(!1),t=u(""),c=u("");return{isSubmitting:n,error:t,success:c,submitForm:async m=>{var f;n.value=!0,t.value="",c.value="";try{let r,a;const i=e.url;if(e.getFormData){if(r=e.getFormData(),!e.url)throw new Error("URL is required when using getFormData");a=e.url}else if(m){const o=m.target;if(r=new FormData(o),i?a=i:a=o.action,!a)throw new Error("No URL provided in options or form action")}else throw new Error("No form data provided");const d=r instanceof URLSearchParams?r:new URLSearchParams(r),l=await fetch(a,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:d.toString()});let s;try{s=await l.json()}catch(o){const h=`Server returned an incomplete response (${i})`;throw console.error(h,o),new Error(h)}if(s!=null&&s.shrimp&&e.handleShrimp&&(e.handleShrimp(s.shrimp),console.debug("Updating shrimp")),!l.ok)throw e.onError&&await e.onError(s),(f=l.headers.get("content-type"))!=null&&f.includes("application/json")?new Error(s.message||"Request was not successful. Please try again later."):new Error("Please refresh the page and try again.");c.value=e.successMessage,e.onSuccess&&await e.onSuccess(s),e.redirectUrl&&setTimeout(()=>{window.location.href=e.redirectUrl},e.redirectDelay||3e3)}catch(r){if(r instanceof Error)t.value=r.message;else{const a="An unexpected error occurred";console.error(a,r),t.value=a}}finally{n.value=!1}}}}export{S as u};
